<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddStudent" xml:space="preserve">
    <value>اضافة طلاب</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>تسجيل طلاب</value>
  </data>
  <data name="RegisterLink" xml:space="preserve">
    <value>نظام التسجيل</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>بحث</value>
  </data>
  <data name="StudentLink" xml:space="preserve">
    <value>قائمة الطلبة</value>
  </data>
  <data name="title1" xml:space="preserve">
    <value>قائمة الطلبة</value>
  </data>
  <data name="title2" xml:space="preserve">
    <value>قائمة الطلبة المسجلين</value>
  </data>
  <data name="searchBy" xml:space="preserve">
    <value>البحث عن طريق الاسم</value>
  </data>
  <data name="StudentEmail" xml:space="preserve">
    <value>ايميل الطالب</value>
  </data>
  <data name="StudentName" xml:space="preserve">
    <value>أسم الطالب</value>
  </data>
  <data name="Addnewstudent" xml:space="preserve">
    <value>اضافة طالب جديد</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>العمر</value>
  </data>
  <data name="Birthday" xml:space="preserve">
    <value>تاريخ الميلاد</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>إلغاء</value>
  </data>
  <data name="clear" xml:space="preserve">
    <value>مسح</value>
  </data>
  <data name="CourseName" xml:space="preserve">
    <value>اسم المادة</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>حذف</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>تعديل</value>
  </data>
  <data name="EditRegisteredCourse" xml:space="preserve">
    <value>تعديل المادة المسجلة للطالب</value>
  </data>
  <data name="EditStudentInformation" xml:space="preserve">
    <value>تعديل معلومات الطالب</value>
  </data>
  <data name="RegisterDate" xml:space="preserve">
    <value>وقت تسجيل المادة</value>
  </data>
  <data name="RegisternewStudent" xml:space="preserve">
    <value>تسجيل مادة جديدة للطالب</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>حفظ</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="StudentAddress" xml:space="preserve">
    <value>عنوان الطالب</value>
  </data>
  <data name="StudentFees" xml:space="preserve">
    <value>سعر الساعة</value>
  </data>
  <data name="StudentMobile" xml:space="preserve">
    <value>رقم الهاتف</value>
  </data>
  <data name="validationEmail" xml:space="preserve">
    <value>الرجاء ادخال ايميل صالح</value>
  </data>
  <data name="validationName" xml:space="preserve">
    <value>ادخل اسم الطالب</value>
  </data>
  <data name="validationNumber" xml:space="preserve">
    <value>الرجاء ادخال رقم صالح</value>
  </data>
  <data name="Selectcourse" xml:space="preserve">
    <value>اختار المادة</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>التالي</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>السابق</value>
  </data>
  <data name="validationEmailReq" xml:space="preserve">
    <value>ادخل ايميل الطالب</value>
  </data>
  <data name="ExistsRegistered" xml:space="preserve">
    <value>* هذا الطالب بالفعل مسجل في هذه المادة</value>
  </data>
  <data name="ExistsStudent" xml:space="preserve">
    <value> * هذا الطالب بالفعل موجود</value>
  </data>
  <data name="RequiredBirthday" xml:space="preserve">
    <value>*تاريخ الميلاد مطلوب</value>
  </data>
  <data name="RequiredEmail" xml:space="preserve">
    <value> * الأيميل مطلوب</value>
  </data>
  <data name="RequiredName" xml:space="preserve">
    <value> * الأسم مطلوب</value>
  </data>
  <data name="RequiredPhone" xml:space="preserve">
    <value>*رقم الهاتف مطلوب</value>
  </data>
</root>